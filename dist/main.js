(()=>{"use strict";eval("\n// CONCATENATED MODULE: ./src/selectors.js\nconst api = {\n  key: 'fec0e887bafb28038fbe61858d51c3d4',\n  url: 'http://api.openweathermap.org/data/2.5/',\n  icon: 'http://openweathermap.org/img/w/',\n};\nconst city = document.querySelector('.city');\nconst iconElement = document.querySelector('.icon');\nconst temp = document.querySelector('.temp');\nconst weatherElement = document.querySelector('.weather');\nconst hiLow = document.querySelector('.hi-low');\nconst describe = document.querySelector('.description');\nconst pressureElement = document.querySelector('.pressure');\nconst humidElement = document.querySelector('.humidity');\nconst search = document.querySelector('.search');\nconst searchBtn = document.querySelector('#btn');\nconst header = document.querySelector('.header');\nconst date = document.querySelector('.date');\nconst main = document.querySelector('.main');\n\n\n// CONCATENATED MODULE: ./src/date.js\n;\n\nconst currentDate = (() => {\n  const dateElement = document.createElement('span');\n  const options = { weekday: 'long', month: 'short', day: 'numeric' };\n  const today = new Date();\n  dateElement.innerHTML = today.toLocaleDateString('en-US', options);\n  dateElement.classList = 'font-weight-bold text-dark px-1';\n  date.appendChild(dateElement);\n})();\n\n/* harmony default export */ const src_date = ((/* unused pure expression or super */ null && (currentDate)));\n// CONCATENATED MODULE: ./src/navbar.js\n/* eslint-disable no-unused-vars */\n\n;\n\n\nconst nav = (() => {\n  header.innerHTML = `\n                      <nav class=\"navbar navbar-light header\">\n                          <a class=\"navbar-brand text-dark\" href=\"index.html\">\n                              <i class=\"fas fa-cloud-sun-rain p-2\"></i>\n                              Weather App\n                          </a>\n                          <span>Click on Temp button to toggle temperature scales</span>\n                          <a class=\"navbar-brand text-dark\" href=\"#\">\n                          <span class=\"px-4\">\n                              <i class=\"fas fa-map-marker-alt\"></i>\n                              Open Weather Map\n                          </span\n                          <span>\n                              <i class=\"fas fa-code\"></i>\n                              API\n                          </span\n                          </a>\n                      </nav>\n                      `;\n})();\n\n/* harmony default export */ const navbar = ((/* unused pure expression or super */ null && (nav)));\n// CONCATENATED MODULE: ./src/weatherBg.js\nconst gihpyApi = (() => {\n  async function giphyJson(giphy) {\n    const giphyDetails = await fetch(`https://api.giphy.com/v1/gifs/translate?api_key=MRYFk4PKhFJbLnOPOLl3eNWfWa9hrNtn&s=${giphy}`, { mode: 'cors' });\n    const data = await giphyDetails.json();\n    return data;\n  }\n  return {\n    giphyJson,\n  };\n})();\n\n/* harmony default export */ const weatherBg = (gihpyApi);\n// CONCATENATED MODULE: ./src/index.js\n/* eslint-disable no-unused-vars, no-use-before-define,\narrow-body-style, prefer-template, no-console, no-alert */\n\n;\n\n\n\nsearchBtn.addEventListener('click', () => {\n  getResults(search.value);\n});\n\nconst getResults = async (inquire) => {\n  try {\n    await fetch(`${api.url}weather?q=${inquire}&units=metric&APPID=${api.key}`, { mode: 'cors' })\n      .then(data => {\n        return data.json();\n      })\n      .then(showResults);\n  } catch (err) {\n    alert('Oops! Something went wrong. Check your spellings or internet please. Error Details: ' + err);\n  }\n};\n\nconst showResults = (data) => {\n  const icon = `${api.icon}` + data.weather[0].icon + '.png';\n  iconElement.setAttribute('src', icon);\n  city.innerHTML = `<span class='weather-atrributes'>City/Country: </span><span class='font-weight-bold'>${data.name}, ${data.sys.country}</span>`;\n  weatherElement.innerHTML = `<span class='weather-atrributes'>Weather: </span><span class='font-weight-bold'>${data.weather[0].main}</span>`;\n  describe.innerHTML = `<span class='weather-atrributes'>Description: </span><span class='font-weight-bold'>${data.weather[0].description}</span>`;\n  pressureElement.innerHTML = `<span class='weather-atrributes'>Atm. Pressure: </span><span class='font-weight-bold'>${data.main.pressure} Pa</span>`;\n  humidElement.innerHTML = `<span class='weather-atrributes'>Humidity: </span><span class='font-weight-bold'>${data.main.humidity}</span>`;\n  city.className = 'text-danger font-weight-bold';\n  weatherElement.className = 'text-danger font-weight-bold';\n  hiLow.className = 'text-danger font-weight-bold';\n  describe.className = 'text-danger font-weight-bold';\n  pressureElement.className = 'text-danger font-weight-bold';\n  humidElement.className = 'text-danger font-weight-bold';\n\n  // Temp Toggle\n  const tempInC = Math.floor(data.main.temp);\n  const tempInF = (temp) => {\n    return Math.floor((temp * (9 / 5)) + 32);\n  };\n  const newTemp = tempInF(tempInC);\n  temp.innerHTML = `<button class='btn btn-secondary text-danger mr-1'><span class='weather-atrributes'>Temp: </span></button>${tempInC}°C`;\n  temp.className = 'text-danger font-weight-bold display-4';\n  temp.addEventListener('click', () => {\n    if (temp.innerHTML.includes('C')) {\n      temp.innerHTML = `<button class='btn btn-secondary text-danger mr-1'><span class='weather-atrributes'>Temp: </span></button>${newTemp}°F`;\n    } else if (temp.innerHTML.includes('F')) {\n      temp.innerHTML = `<button class='btn btn-secondary text-danger mr-1'><span class='weather-atrributes'>Temp: </span></button>${tempInC}°C`;\n    }\n  });\n\n  // High_Low Toggle\n  const hiLowInC = `${Math.floor(data.main.temp_min)}°C / ${Math.floor(data.main.temp_max)}`;\n  const hiLowInF = (hiLow) => {\n    return `${Math.floor(data.main.temp_min * (9 / 5) + 32)}°F / ${Math.floor(data.main.temp_max * (9 / 5) + 32)}`;\n  };\n  const newHighLow = hiLowInF(hiLowInC);\n  hiLow.innerHTML = `<span class='weather-atrributes'>Low/High: </span><span class='font-weight-bold'>${hiLowInC}°C</span>`;\n  temp.addEventListener('click', () => {\n    if (hiLow.innerHTML.includes('C')) {\n      hiLow.innerHTML = `<span class='weather-atrributes'>Low/High: </span><span class='font-weight-bold'>${newHighLow}°F</span>`;\n    } else if (hiLow.innerHTML.includes('F')) {\n      hiLow.innerHTML = `<span class='weather-atrributes'>Low/High: </span><span class='font-weight-bold'>${hiLowInC}°C</span>`;\n    }\n  });\n\n  src_weatherBg(data);\n};\n\nconst src_weatherBg = (data) => {\n  if (data.cod === 200) {\n    main.style.display = 'block';\n    const giphy = weatherBg.giphyJson(`${data.weather[0].main} weather`);\n    const giphyRecord = giphy.then(data => {\n      main.style.backgroundImage = `url(${data.data.images.downsized.url})`;\n      main.style.backgroundSize = 'cover';\n    });\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///980\n")})();